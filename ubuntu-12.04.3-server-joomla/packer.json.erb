<%
	##########
	# This is an erb template for a packer json file. 
	# Use ruby's erb command to generate a template with the following command:
	#  `erb packer.json.erb > packer.json`
	##########
	require 'json'

	def to_json(obj, tab_count=2)
		result=""
		indent_line = false
		JSON.pretty_generate(obj).each_line do |l| 
			if indent_line
				result += "\t" * tab_count
			end
			result += l
			indent_line = true
		end
		
		result
	end

	# load the base template:
	parent = Dir.chdir("..") { Dir.pwd }
	packer_str = IO.read(parent + "/ubuntu-12.04.3-server/packer.json")
	base = JSON.parse(packer_str)
	
	# changes to base template:
	base["builders"][0]["name"] = "joomla-server"
	# NOTE: nil means "required" - http://www.packer.io/docs/templates/user-variables.html
	base["variables"]["MYSQL_USER"] = nil 
	base["variables"]["MYSQL_PASSWORD"] = nil
	base["variables"]["MYSQL_DATABASE"] = nil
%>

{
	"variables": <%= to_json(base["variables"]) %>,
	"builders": <%= to_json(base["builders"]) %>,
	"provisioners": [
		<% 
			# Note: Using file+inline instead of normal scripts because provision_joomla needs other files in the same dir and need to pass args to other scripts 
			# This could be done with script using execute_command & remote_path, not sure if that is better?
		%>
		{
			"type": "file",
			"source": "upload",
			"destination": "/tmp"
		},
		{
			"type": "shell",
			"inline": [ 
				<% # Set user as sudo w/o password required (this is useful to rsync files to the /etc/... directories later) %>
				"chmod +x '/tmp/upload/setup_users.sh'",
				"bash '/tmp/upload/setup_users.sh' '{{user `VM_USER`}}'",
				<% # Main joomla provisioning script. Work done here. %>
				"chmod +x '/tmp/upload/provision_joomla.sh'",
				"bash '/tmp/upload/provision_joomla.sh' '{{user `VM_PASSWORD`}}' '{{user `MYSQL_USER`}}' '{{user `MYSQL_PASSWORD`}}' '{{user `MYSQL_DATABASE`}}'"
			],
			"execute_command": "echo '{{user `VM_PASSWORD`}}'|{{.Vars}} sudo -E -S bash '{{.Path}}'"
		}
	]	
}